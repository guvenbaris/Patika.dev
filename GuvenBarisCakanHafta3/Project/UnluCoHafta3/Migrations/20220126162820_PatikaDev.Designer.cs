// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnluCoHafta3.Models;

namespace UnluCoHafta3.Migrations
{
    [DbContext(typeof(PatikaDevDbContext))]
    [Migration("20220126162820_PatikaDev")]
    partial class PatikaDev
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EducationParticipant", b =>
                {
                    b.Property<int>("EducationsEducationId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipantsParticipantId")
                        .HasColumnType("int");

                    b.HasKey("EducationsEducationId", "ParticipantsParticipantId");

                    b.HasIndex("ParticipantsParticipantId");

                    b.ToTable("EducationParticipant");
                });

            modelBuilder.Entity("EducationStudent", b =>
                {
                    b.Property<int>("EducationsEducationId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsStudentId")
                        .HasColumnType("int");

                    b.HasKey("EducationsEducationId", "StudentsStudentId");

                    b.HasIndex("StudentsStudentId");

                    b.ToTable("EducationStudent");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Absence", b =>
                {
                    b.Property<int>("AbsenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AbsenceId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Assistant", b =>
                {
                    b.Property<int>("AssistantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonelInformationId")
                        .HasColumnType("int");

                    b.HasKey("AssistantId");

                    b.HasIndex("PersonelInformationId")
                        .IsUnique();

                    b.ToTable("Assistants");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Authorized", b =>
                {
                    b.Property<int>("AuthorizedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Degree")
                        .HasColumnType("real");

                    b.Property<int>("PersonelInformationId")
                        .HasColumnType("int");

                    b.HasKey("AuthorizedId");

                    b.HasIndex("PersonelInformationId")
                        .IsUnique();

                    b.ToTable("Authorities");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssistantId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorizedId")
                        .HasColumnType("int");

                    b.Property<string>("EducationContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("EducationId");

                    b.HasIndex("AssistantId");

                    b.HasIndex("AuthorizedId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonelInformationId")
                        .HasColumnType("int");

                    b.HasKey("ParticipantId");

                    b.HasIndex("PersonelInformationId")
                        .IsUnique();

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.PersonelInformation", b =>
                {
                    b.Property<int>("PersonelInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonelInformationId");

                    b.ToTable("PersonelInformations");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonelInformationId")
                        .HasColumnType("int");

                    b.Property<bool>("WorkingStatus")
                        .HasColumnType("bit");

                    b.HasKey("StudentId");

                    b.HasIndex("PersonelInformationId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.SuccessAverage", b =>
                {
                    b.Property<int>("AverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AveragePercent")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AverageId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("SuccessAverages");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComputerKnowledge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelInformationId")
                        .HasColumnType("int");

                    b.HasKey("TeacherId");

                    b.HasIndex("PersonelInformationId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("EducationParticipant", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.Education", null)
                        .WithMany()
                        .HasForeignKey("EducationsEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnluCoHafta3.Models.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EducationStudent", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.Education", null)
                        .WithMany()
                        .HasForeignKey("EducationsEducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnluCoHafta3.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Absence", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Assistant", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.PersonelInformation", "PersonelInformation")
                        .WithMany()
                        .HasForeignKey("PersonelInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonelInformation");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Authorized", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.PersonelInformation", "PersonelInformation")
                        .WithMany()
                        .HasForeignKey("PersonelInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonelInformation");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Education", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.Assistant", "Assistant")
                        .WithMany()
                        .HasForeignKey("AssistantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnluCoHafta3.Models.Authorized", "Authorized")
                        .WithMany()
                        .HasForeignKey("AuthorizedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnluCoHafta3.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assistant");

                    b.Navigation("Authorized");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Participant", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.PersonelInformation", "PersonelInformation")
                        .WithMany()
                        .HasForeignKey("PersonelInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonelInformation");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Student", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.PersonelInformation", "PersonelInformation")
                        .WithMany()
                        .HasForeignKey("PersonelInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonelInformation");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.SuccessAverage", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UnluCoHafta3.Models.Teacher", b =>
                {
                    b.HasOne("UnluCoHafta3.Models.PersonelInformation", "PersonelInformation")
                        .WithMany()
                        .HasForeignKey("PersonelInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonelInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
